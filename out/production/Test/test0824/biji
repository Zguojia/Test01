异常概念：指的是程序在执行过程中，出现的非正常的情况，最终会导致JVM的非正常停止。
    异常本身是一个类，产生异常就是创建异常对象并抛出了一个异常对象。Java处理异常的方式是中断处理。

异常体系：
     java.lang.Throwable
        java.lang.Error
        java.lang.Exception
平常所说的异常指 java.lang.Exception

    Throwable体系：
        Error:严重错误Error，无法通过处理的错误，只能事先避免。
        Exception:表示异常，异常产生后程序员可以通过代码的方式纠正，使程序继续运行，是必须要处理的。

public void printStackTrace() :打印异常的详细信息。
public String getMessage() :获取发生异常的原因。
public String toString() :获取异常的类型和异常描述信息(不用)。

异常(Exception)的分类:根据在编译时期还是运行时期去检查异常。
    编译时期异常:checked异常。在编译时期,就会检查,如果没有处理异常,则编译失败。(如日期格式化异常)
    运行时期异常:runtime异常。在运行时期,检查异常.在编译时期,运行异常不会编译器检测(不报错)。(如数学异 常)

Java异常处理的五个关键字：try、catch、finally、throw、throws

异常的处理：
    抛出异常throw：
        抛出一个异常操作步骤：
            1. 创建一个异常对象。封装一些提示信息(信息可以自己编写)。
            2. 需要将这个异常对象告知给调用者。
                怎么告知呢？怎么将这个异常对象传递到调用者处呢？通过关键字throw就可以完成。
            throw 异常对象。 throw用在方法内，用来抛出一个异常对象，将这个异常对象传递到调用者处，并结束当前方法的执行。
        使用格式：
            throw new 异常类名(参数);

    Objects非空判断：
        public static <T> T requireNonNull(T obj) :查看指定引用对象不是null。

    声明异常throws：
        声明异常：将问题标识出来，报告给调用者。
        如果方法内通过throw抛出了编译时异常，而没有捕获处理（稍后讲 解该方式），那么必须通过throws进行声明，让调用者去处理。
        声明异常格式：修饰符 返回值类型 方法名(参数) throws 异常类名1,异常类名2…{ }

    捕获异常try…catch：//快捷键：Ctrl+alt+t
        捕获异常：Java中对异常有针对性的语句进行捕获，可以对出现的异常进行指定方式的处理。
            try{
                编写可能会出现异常的代码
            }catch(异常类型 e){
                处理异常的代码
                //记录日志/打印异常信息/继续抛出异常
            }
        try：该代码块中编写可能产生异常的代码。规定：不会发生异常的代码不能放到try里。
        catch：用来进行某种异常的捕获，实现对捕获到的异常进行处理。
        public String getMessage() :获取异常的描述信息,原因(提示给用户的时候,就提示错误原因。
        public String toString() :获取异常的类型和异常描述信息(不用)。
        public void printStackTrace() :打印异常的跟踪栈信息并输出到控制台。

        public static int method(){
            try{
                int a = 1 / 1;      //3
                //int a = 1 / 0;    //3
                return 1 ;
            }catch(Exception e){
                e.printStackTrace();
                return 2;
            }finally{
                //无论如何都会执行
                return 3;
            }
        }

    finally 代码块：
        finally：有一些特定的代码无论异常是否发生，都需要执行。

    异常注意事项：
        多个异常使用捕获又该如何处理呢？
            1. 多个异常分别处理。
            2. 多个异常一次捕获，多次处理。
            3. 多个异常一次捕获一次处理。 一般我们是使用一次捕获多次处理方式，
            格式如下：
                try{
                    编写可能会出现异常的代码
                }catch(异常类型A e){
                    当try中出现A类型异常,就用该catch来捕获. 处理异常的代码
                    //记录日志/打印异常信息/继续抛出异常
                }catch(异常类型B e){
                    当try中出现B类型异常,就用该catch来捕获. 处理异常的代码
                    //记录日志/打印异常信息/继续抛出异常
                }







